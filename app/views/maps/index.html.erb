<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>地図表示</title>
  <script src='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js'></script>
  <link href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet' />
  <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>
  <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.css" type="text/css">
  <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.min.js"></script>
  <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.css" type="text/css">
  <style>
    html { height: 100%; }
    body { height: 100%; margin: 0; padding: 0; display: flex; }
    #map-wrapper { height: 100%; width: 70%; }
    #map { height: 100%; }
    #sidebar { height: 100%; width: 30%; background-color: #f5f5f5; z-index: 1; }
    #search-box { margin: 10px; }
    .mapboxgl-popup-content iframe {width: 300px; height: 200px;}
    .mapboxgl-popup-content {width: 300px; height: 200px;}
    .marker {width: 25px; height: 25px; background-size: contain; background-repeat: no-repeat; background-position: center;}
    
  </style>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
  <div id='map-wrapper'>
    <div id='map'></div>
  </div>
  <div id='sidebar'>
    <h3>〇〇デートプラン</h3>
    <% @sheet_titles.each do |title| %>
      <p><%= title %></p>
    <% end %>
    <% @locations.each do |location|%>
      <label>
      <input type="checkbox" class="location-checkbox" data-location-id="<%= location[1] %>">
        <span><%= location[5] %>-<%= location[0] %></span>
      </label>
      <p>↓</p>
      <div class="location" id=<%= location[1] %> data-latitude=<%= location[2] %> data-longitude=<%= location[3] %>></div>
      <div class="location" id="location-<%= location[1] %>" data-latitude=<%= location[2] %> data-longitude=<%= location[3] %>></div>
   <% end %>
  </div>

  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiMzExMHJ5b3UiLCJhIjoiY2xkcG5wbjN4MTUyODNvdGJxNWF4bmR1ayJ9.cod8B0HJHns-hMdsMjRglg';

    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/3110ryou/cldpq4wt0000301n13isaug1m',
      center: [139.6917, 35.6895], // 東京都庁の緯度経度情報
      zoom: 12, // 適切な拡大率を指定
      maxBounds: [ // マップの表示範囲を東京都内に限定
        [139.562587, 35.531549],
        [139.910206, 35.817813]
      ],
      directionsControl: null, // 追加
    });

    var locations = document.querySelectorAll('.location');
    locations.forEach(function(location) {
      var id = location.getAttribute('id');
      var latitude = location.getAttribute('data-latitude');
      var longitude = location.getAttribute('data-longitude');
  
      var popup = new mapboxgl.Popup();
  
      var el = document.createElement('div');
      el.className = 'marker';
      el.style.backgroundImage = 'url(icons8-マーカー-50.png)';
  
      // ポップアップを表示する位置を指定
      new mapboxgl.Marker(el)
        .setLngLat([longitude, latitude])  // マーカーの座標
        .setPopup(popup) // ポップアップを設定
        .addTo(map); // マップに追加
    });

    function addDirections(currentLocation, destination) {
      // 現在の経路案内コントロールを削除
      if (map.directionsControl) {
        map.removeControl(map.directionsControl);
      }
    
      // 経路案内コントロールを初期化
      const directions = new MapboxDirections({
        accessToken: mapboxgl.accessToken,
        profile: 'mapbox/walking', // 歩行ルートを表示する場合
        language: 'ja', // 言語を日本語に設定
        unit: 'metric', // メートル単位で表示
        interactive: false
      });
    
      // 経路案内コントロールを追加
      map.addControl(directions, 'top-left');
      map.directionsControl = directions; // 追加
    
      // 現在地と目的地を設定
      directions.setOrigin(currentLocation);
      directions.setDestination(destination);
    }    

    // 現在地を取得
    navigator.geolocation.getCurrentPosition(function(position) {
      const lng = position.coords.longitude;
      const lat = position.coords.latitude;
    
      // 現在地を更新
      map.jumpTo({center: [lng, lat], zoom: 14});
    
      // チェックボックスが変更されたときに経路案内を更新
      $('.location-checkbox').on('change', function() {
        if ($(this).is(':checked')) {
          const selectedLocationId = $(this).data('location-id');
          const selectedLatitude = $(`#location-${selectedLocationId}`).data('latitude');
          const selectedLongitude = $(`#location-${selectedLocationId}`).data('longitude');
          const destination = [selectedLongitude, selectedLatitude];
    
          // 経路案内を追加
          addDirections([lng, lat], destination);
        } else {
          // 経路案内を削除
          if (map.directionsControl) {
            map.removeControl(map.directionsControl);
            map.directionsControl = null;
          }
        }
      });
    }, function(error) {
      console.error('Geolocation APIによる位置情報取得に失敗しました。エラーコード: ' + error.code);
      // 位置情報取得に失敗した場合の処理をここに追加することができます。
    });
    
    
    $(function() {
    // チェックボックスがクリックされたときの処理
    $('.location-checkbox').on('click', function() {
      // 全てのチェックボックスのチェックを外す
      $('.location-checkbox').not(this).prop('checked', false);
      // 選択されたチェックボックスの値を取得
      var selectedLocationId = $(this).data('location-id');
      // 選択された値を使って何らかの処理を行う
      console.log('選択された場所のID:', selectedLocationId);
    });
  });

  $(function() {
    var currentPopup = null;
  
    $('.location-checkbox').on('change', function() {
      var selectedLocationId = $(this).data('location-id');
      var selectedLatitude = $(`#location-${selectedLocationId}`).data('latitude');
      var selectedLongitude = $(`#location-${selectedLocationId}`).data('longitude');
  
      if (currentPopup) {
        currentPopup.remove();
      }
  
      if ($(this).is(':checked')) {
        // Ajaxリクエストでpopup.html.erbを取得
        $.ajax({
          url: `/maps/${selectedLocationId}/popup`,
          dataType: 'html',
          success: function(popupContent) {
            var popup = new mapboxgl.Popup({closeOnClick: false})
              .setLngLat([selectedLongitude, selectedLatitude])
              .setHTML(popupContent)
              .addTo(map);
  
            currentPopup = popup;
          },
          error: function() {
            console.error('ポップアップの取得に失敗しました。');
          }
        });
      } else {
        currentPopup = null;
      }
    });
  });  
    
  </script>
</body>
</html>